name: "Checkov Job"

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  checkov-job:
    name: "Checkov Action"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Repo"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Run Checkov"
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          output_format: "json"
          output_file_path: "checkov_results.json"
        continue-on-error: true

      - name: "Parse Checkov Output"
        id: parse_output
        continue-on-error: true
        run: |
          # Ensure jq is installed
          sudo apt-get update && sudo apt-get install -y jq || true

          # Extract failed checks only from the Checkov output
          if [ -f checkov_results.json ]; then
            cat <<EOF > filter_failed_checks.jq
            .results.failed_checks | map(
              "- **Check:** \(.check_id) - \(.check_name)\n  **File:** \(.file_path)\n  **Resource:** \(.resource)\n  **Guide:** [\(.guideline)](\(.guideline))"
            ) | join("\n\n")
            EOF

            output=$(jq -f filter_failed_checks.jq checkov_results.json 2>/dev/null) || output=""

            # Default message if no output
            if [ -z "$output" ]; then
              output=":white_check_mark: No failed checks found."
            fi
          else
            output=":warning: Checkov results not found or Checkov failed."
          fi

          echo "::set-output name=checkov_output::$output"

      - name: "Post Checkov PR Comment"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Checkov Results\n\n${process.env.CHECKOV_OUTPUT}\n`
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: output
            })
        env:
          CHECKOV_OUTPUT: ${{ steps.parse_output.outputs.checkov_output }}
