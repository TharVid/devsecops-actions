name: "Secrets Scanning with GitLeaks"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  gitleaks-scan:
    name: "Run GitLeaks Scan"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      - name: "Install GitLeaks"
        run: |
          curl -sSL -o /tmp/gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.16.2/gitleaks_8.16.2_linux_x64.tar.gz
          tar -zxvf /tmp/gitleaks.tar.gz -C /tmp gitleaks
          sudo mv /tmp/gitleaks /usr/local/bin/

      - name: "Run GitLeaks"
        id: gitleaks
        run: |
          gitleaks detect --source . --report-format json --report-path gitleaks-report.json || exit 0

      - name: "Check for Secrets"
        id: check_secrets
        run: |
          if [ -s gitleaks-report.json ]; then
            echo "secrets_detected=true" >> $GITHUB_ENV
          else
            echo "secrets_detected=false" >> $GITHUB_ENV
          fi

      - name: "Set Comment Content"
        id: set_comment_content
        run: |
          if [ "${{ env.secrets_detected }}" == "true" ]; then
            comment=":x: Secrets detected by GitLeaks:\n\n$(jq -r '.[] | \"- File: \(.file)\\n  Line: \(.line)\\n  Secret: \(.description)\"' gitleaks-report.json)"
          else
            comment=":white_check_mark: No secrets detected by GitLeaks."
          fi
          echo "::set-output name=comment::${comment}"

      - name: "Add Comment"
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.issue.number }}
          body: ${{ steps.set_comment_content.outputs.comment }}
          token: ${{ secrets.GITHUB_TOKEN }}
